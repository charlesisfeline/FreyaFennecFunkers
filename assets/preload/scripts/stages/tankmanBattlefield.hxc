import flixel.FlxG;
import flixel.math.FlxAngle;
import funkin.Paths;
import funkin.play.PlayState;
import funkin.play.stage.Stage;
import funkin.play.GameOverSubState;
import funkin.Preferences;
import flixel.FlxG;
import funkin.audio.FunkinSound;
import funkin.Paths;

class TankmanBattlefieldStage extends Stage
{
	var playingJeffQuote:Bool;

	function new()
	{
		super('tankmanBattlefield');

		playingJeffQuote = false;
	}

	function onCreate(event:ScriptEvent):Void
	{
		super.onCreate(event);

		playingJeffQuote = false;
	}

	override function buildStage()
	{
		super.buildStage();

		// Give the clouds a random position, and a velocity to make them move.
		var clouds = getNamedProp('clouds');
		clouds.active = true;
		clouds.x = FlxG.random.int(-700, -100);
		clouds.y = FlxG.random.int(-20, 20);
		clouds.velocity.x = FlxG.random.float(5, 15);

		tankAngle = FlxG.random.int(-90, 45);
		tankSpeed = FlxG.random.float(5, 7);
	}

	function onUpdate(event:UpdateScriptEvent):Void
	{
		super.onUpdate(event);
		moveTank(event.elapsed);
	}

	var tankMoving:Bool = false;
	var tankAngle:Float = FlxG.random.int(-90, 45);
	var tankSpeed:Float = FlxG.random.float(5, 7);
	var tankX:Float = 400;

	function onBeatHit(event:SongTimeScriptEvent):Void
	{
		super.onBeatHit(event);
	}

	function moveTank(elapsed:Float):Void
	{
		var daAngleOffset:Float = 1;
		tankAngle += elapsed * tankSpeed;

		var tankRolling = getNamedProp('tankRolling');
		tankRolling.angle = tankAngle - 90 + 15;
		tankRolling.x = tankX + Math.cos(FlxAngle.asRadians((tankAngle * daAngleOffset) + 180)) * 1500;
		tankRolling.y = 1300 + Math.sin(FlxAngle.asRadians((tankAngle * daAngleOffset) + 180)) * 1100;
	}

	function onSongRetry(event:ScriptEvent)
	{
		super.onSongRetry(event);

		playingJeffQuote = false;

		// Resets the clouds!
		var clouds = getNamedProp('clouds');
		clouds.active = true;
		clouds.x = FlxG.random.int(-700, -100);
		clouds.y = FlxG.random.int(-20, 20);
		clouds.velocity.x = FlxG.random.float(5, 15);
	}

	function onPostGameOver(event:PostGameOverScriptEvent)
  {
    event.musicVolume = 0.2;

    // Jeff quotes.
    if(!playingJeffQuote) {
      playingJeffQuote = true;
      playJeffQuote();
    }

		super.onPostGameOver(event);
  }

	function playJeffQuote():Void
  {
    var randomCensor:Array<Int> = [];
    var gameOverSubState = GameOverSubState.instance;

    if (!Preferences.naughtyness) randomCensor = [1, 3, 8, 13, 17, 21];

    FunkinSound.playOnce(Paths.sound('jeffGameover/jeffGameover-' + FlxG.random.int(1, 25, randomCensor)), 1, function() {
      // Once the quote ends, fade in the game over music.
      @:privateAccess
      if (!gameOverSubState.isEnding && gameOverSubState.gameOverMusic != null)
      {
        @:privateAccess
        gameOverSubState.gameOverMusic.fadeIn(4, 0.2, 1);
      }
    });
  }
}
